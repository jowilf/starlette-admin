[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "starlette-admin"
description = "Fast, beautiful and extensible administrative interface framework for Starlette/FastApi applications"
readme = "README.md"
license = "MIT"
requires-python = ">=3.8"
keywords = ["sqlalchemy", "sqlmodel", "mongoengine", "odmantic", "starlette", "fastapi", "admin", "dashboard", "datatables"]
authors = [
    { name = "Jocelin Hounon", email = "hounonj@gmail.com" },
]
classifiers = [
    'Development Status :: 4 - Beta',
    "Framework :: AsyncIO",
    'Environment :: Web Environment',
    'Intended Audience :: Developers',
    "License :: OSI Approved :: MIT License",
    'Operating System :: OS Independent',
    'Programming Language :: Python',
    'Topic :: Software Development :: Libraries :: Python Modules',
    'Programming Language :: Python :: 3.7',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
]
dependencies = [
    "starlette",
    "jinja2 >=3, <4",
    "python-multipart",
]
dynamic = ["version"]

[project.urls]
Homepage = "https://github.com/jowilf/starlette-admin"
Documentation = "https://jowilf.github.io/starlette-admin"
Repository = "https://github.com/jowilf/starlette-admin"
Changelog = "https://jowilf.github.io/starlette-admin/changelog/"

[project.optional-dependencies]
i18n = [
    "babel >=2.13.0"
]
test = [
    "pytest >=7.2.0, <7.5.0",
    "pytest-asyncio >=0.20.2, <0.22.0",
    "mypy ==1.5.1",
    "ruff ==0.0.292",
    "black ==23.9.1",
    "httpx >=0.23.3, <0.26.0",
    "SQLAlchemy-Utils >=0.40.0, <0.42.0",
    "arrow >=1.2.3, <1.4.0",
    "colour >=0.1.5, <0.2.0",
    "phonenumbers >=8.13.3, <8.14.0",
    "passlib >=1.7.4, <1.8.0",
    "backports.zoneinfo; python_version<'3.9'",
    "sqlalchemy-file >=0.5.0, <0.7.0",
    "fasteners ==0.19",
    "PyMySQL[rsa] >=1.0.2, <1.2.0",
    "psycopg2-binary >=2.9.5, <3.0.0",
    "aiosqlite >=0.17.0, <0.20.0",
    "asyncpg >=0.27.0, <0.29.0",
    "aiomysql >=0.1.1, <0.3.0",
    "mongoengine >=0.25.0, <0.28.0",
    "odmantic >=0.9.0,<0.10.0",
    "tinydb >=4.7.0, <4.9.0",
    "Pillow >=9.4.0, <9.6.0",
    "itsdangerous >=2.1.2, <2.2.0",
    "pydantic[email] >=1.10.2, <2.0.0",
]
cov = [
    "coverage[toml] >=7.0.0, <7.4.0"
]
doc = [
    "mkdocs >=1.4.2, <2.0.0",
    "mkdocs-material >=9.0.0, <10.0.0",
    "mkdocstrings[python] >=0.19.0, <0.24.0",
    "mkdocs-static-i18n >=0.53.0, <0.57.0"
]
dev = [
    "pre-commit >=2.20.0, <4.0.0",
    "uvicorn >=0.20.0, <0.24.0",
]

[tool.hatch.envs.default]
features = [
    "i18n",
    "test",
    "cov",
    "doc",
    "dev"
]
[tool.hatch.envs.default.scripts]
format = [
    "ruff starlette_admin tests --fix",
    "black ."
]

[tool.hatch.envs.test]
features = [
    "i18n",
    "test",
    "cov",
]
[tool.hatch.envs.test.scripts]
lint = [
    "mypy starlette_admin",
    "ruff starlette_admin tests",
    "black . --check"
]
all = "coverage run -m pytest tests"
sqla = "coverage run -m pytest tests/sqla"

[[tool.hatch.envs.test.matrix]]
sqla_version = ["sqla14", "sqla2"]

[tool.hatch.envs.test.overrides]
matrix.sqla_version.dependencies = [
    { value = "SQLAlchemy[asyncio] >=2.0, <2.1", if = ["sqla2"] },
    { value = "SQLAlchemy[asyncio] >=1.4, <1.5", if = ["sqla14"] },
    { value = "sqlmodel ==0.0.8", if = ["sqla14"] },
]
matrix.sqla_version.scripts = [
    { key = "all", value = 'coverage run -m pytest tests --ignore=tests/sqla/test_sqlmodel.py', if = ["sqla2"] },
    { key = "sqla", value = 'coverage run -m pytest tests/sqla --ignore=tests/sqla/test_sqlmodel.py', if = ["sqla2"] },
    { key = "cov", value = '', if = ["sqla14"] }, # run after sqla2 test
]

[tool.hatch.envs.cov]
features = [
    "cov",
]
[tool.hatch.envs.cov.scripts]
report = [
    "coverage combine",
    "coverage report --show-missing",
    "coverage xml"
]

[tool.hatch.envs.i18n]
features = [
    "i18n",
]
dependencies = [
    "click",
    "requests"
]
[tool.hatch.envs.i18n.scripts]
init = "python i18n/main.py {args:.}"
extract = "pybabel extract -F i18n/babel.ini -k _n -o i18n/admin.pot --project starlette-admin starlette_admin {args:.}"
update = "pybabel update -i i18n/admin.pot -d starlette_admin/translations -D admin {args:.}"
compile = "pybabel compile -f -D admin -d starlette_admin/translations {args:.}"

[tool.hatch.envs.docs]
features = [
    "doc",
]
[tool.hatch.envs.docs.scripts]
serve = "mkdocs serve -a localhost:8080"
build = "mkdocs build"
deploy = "mkdocs gh-deploy --force"

[tool.hatch.version]
path = "starlette_admin/__init__.py"

[tool.coverage.report]
fail_under = 99
show_missing = true
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
    "raise NotImplementedError",
    "except NotImplementedError",
    "except ImportError"
]

[tool.coverage.run]
parallel = true
concurrency = ["thread", "greenlet"]
source = ["starlette_admin", "tests"]

[tool.ruff]
select = [
    "B", # flake8-bugbear
    "C4", # flake8-comprehensions
    "C90", # mccabe
    "E", # pycodestyle errors
    "ERA", # eradicate
    "F", # pyflakes
    "I", # isort
    "INT", # flake8-gettext
    "N", # pep8-naming
    "PIE", # flake8-pie,
    "PLC", # pylint - convention
    "PLE", # pylint - error
    "PLW", # pylint - warning
    "Q", # flake8-quotes
    "RET", # flake8-return,
    "RUF", # Ruff-specific rules
    "SIM", # flake8-simplify
    "UP", # pyupgrade
    "W", # pycodestyle warnings
]
ignore = [
    "B008", # Do not perform function call `_` in argument defaults, neccessary for lazy_gettext
    "B905", # `zip()` without an explicit `strict=` parameter
    "E501", # line too long, handled by black
    "N818", # Exception {name} should be named with an Error suffix
]
target-version = "py38"

[tool.ruff.isort]
known-third-party = ["starlette_admin"]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401", "PLC0414"]
"examples/**" = ["N805", "N999", "RUF012"]
"tests/**" = ["RUF012"]

[tool.mypy]
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
implicit_reexport = false
strict_equality = true
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = [
    "starlette_admin.contrib.sqla.helpers",
    "starlette_admin.contrib.sqla.view",
]
warn_unused_ignores = false

[tool.hatch.build.targets.wheel]
[tool.hatch.build.targets.sdist]
include = ["starlette_admin"]
