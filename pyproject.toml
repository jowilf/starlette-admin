[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "starlette-admin"
description = "Fast, beautiful and extensible administrative interface framework for Starlette/FastApi applications"
readme = "README.md"
license = "MIT"
requires-python = ">=3.7"
keywords = ["sqlalchemy", "sqlmodel", "mongoengine", "odmantic", "starlette", "fastapi", "admin", "dashboard", "datatables"]
authors = [
    { name = "Jocelin Hounon", email = "hounonj@gmail.com" },
]
classifiers = [
    'Development Status :: 4 - Beta',
    "Framework :: AsyncIO",
    'Environment :: Web Environment',
    'Intended Audience :: Developers',
    "License :: OSI Approved :: MIT License",
    'Operating System :: OS Independent',
    'Programming Language :: Python',
    'Topic :: Software Development :: Libraries :: Python Modules',
    'Programming Language :: Python :: 3.7',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
]
dependencies = [
    "starlette",
    "jinja2 >=3, <4",
    "python-multipart",
]
dynamic = ["version"]

[project.urls]
Homepage = "https://github.com/jowilf/starlette-admin"
Documentation = "https://jowilf.github.io/starlette-admin"
Repository = "https://github.com/jowilf/starlette-admin"
Changelog = "https://jowilf.github.io/starlette-admin/changelog/"

[tool.hatch.envs.default]
dependencies = [
    "pytest >=7.2.0",
    "pytest-asyncio >=0.20.2",
    "httpx >=0.23.1",
    "coverage >=6.5.0",
    "mypy ==0.990",
    "ruff ==0.0.149",
    "black ==22.10.0",
    "SQLAlchemy[asyncio] >=1.4, <1.5.0",
    "sqlalchemy-file >=0.1.5",
    "fasteners >=0.18",
    "PyMySQL[rsa] >=1.0.2",
    "psycopg2-binary >=2.9.5",
    "aiosqlite >=0.17.0",
    "asyncpg >=0.27.0",
    "aiomysql >=0.1.1",
    "mongoengine >=0.24.2",
    "sqlmodel >=0.0.8",
    "odmantic >=0.9.0",
    "tinydb >=4.7.0",
    "Pillow >=9.3.0",
    "itsdangerous >=2.1.2",
    "pydantic[email] >=1.10.2",
    "uvicorn >=0.20.0",
    "pre-commit >=2.20.0",
    # Docs
    "mkdocs >=1.1.2, <2.0.0",
    "mkdocs-material >=8.5.10, <9.0.0",
    "mkdocstrings[python] >=0.19.0, <0.20.0",
    "mkdocs-static-i18n >= 0.18.0"
]

[tool.hatch.envs.default.scripts]
format = [
    "ruff starlette_admin tests --fix",
    "black ."
]
lint = [
    "mypy starlette_admin",
    "ruff starlette_admin tests",
    "black . --check"
]
cov = [
    "coverage combine",
    "coverage report --show-missing",
    "coverage xml"
]
docs = "mkdocs serve -a localhost:8080"
docs_build = "mkdocs build"
docs_deploy = "mkdocs gh-deploy --force"
test = "coverage run -m pytest tests"
test_sqla = "coverage run -m pytest tests/sqla"

[tool.hatch.version]
path = "starlette_admin/__init__.py"

[tool.coverage.report]
fail_under = 99
show_missing = true
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
    "raise NotImplementedError",
    "except NotImplementedError"
]

[tool.coverage.run]
parallel = true
concurrency = ["thread", "greenlet"]
source = ["starlette_admin", "tests"]

[tool.ruff]
select = [
    "E", # pycodestyle errors
    "W", # pycodestyle warnings
    "F", # pyflakes
    "I", # isort
    "C", # flake8-comprehensions
    "B", # flake8-bugbear
]
ignore = [
    "E501", # line too long, handled by black
]

[tool.ruff.isort]
known-third-party = ["starlette_admin"]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
implicit_reexport = false
strict_equality = true
ignore_missing_imports = true


[tool.hatch.build.targets.wheel]
[tool.hatch.build.targets.sdist]
include = ["starlette_admin"]
